Continuous queries are a feature of Gemfire that allows a client to subscribe to cache events using a query.

To use continuous queries you need to have a [Cache Server|guide:3. Cache Servers] running with @subscriptionEnabled@ set to @true@ (see the configuration in the previous section). Then simply use the @cq@ namespace to execute a dynamic finder that takes a closure:

{code}
Person.cq.findAllByLastName("Flintstone") { event ->
			println "GOT EVENT $event"
}
{code}

The above will execute a continuous query that fires every time a @Person@ with the surname "Flinstone" is inserted or updated in the cache. The @event@ object is an instance of "CqEvent":http://www.gemstone.com/docs/current/product/docs/japi/com/gemstone/gemfire/cache/query/CqEvent.html which contains methods to get the value and the operation that triggered the event. 

Typically you would write an event handler that checks if an exception was thrown:


{code}
Person.cq.findAllByLastName("Flintstone") { event ->
	if(!event.throwable) {
		println "NEW FLINSTONE ${event.newValue.firstName}"
	}
		
}
{code}


